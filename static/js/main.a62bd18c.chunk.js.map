{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","Message","props","className","S","message","img_box","avatar","src","alt","message_box","name","message_text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","priority","color","affair","style","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","filter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","container","onKeyDown","disabled","errorText","GreetingContainer","users","addUserCallback","setName","setError","alert","length","HW3","setUsers","newUsers","v1","SuperCheckbox","onChangeChecked","checked","children","checkbox","fake","HW4","text","setText","showAlert","setChecked","column","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a62bd18c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__1fGqp\",\"error\":\"Greeting_error__3nkgP\",\"errorText\":\"Greeting_errorText__3xrqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3j6WW\",\"errorInput\":\"SuperInputText_errorInput__UVLUR\",\"error\":\"SuperInputText_error__2zvna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2F9e9\",\"fake\":\"SuperCheckbox_fake__1bGj3\",\"spanClassName\":\"SuperCheckbox_spanClassName__xtRFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2nse1\",\"red\":\"SuperButton_red__3PAbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jWCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__sjOv8\",\"column\":\"HW4_column__3FSZh\",\"testSpanError\":\"HW4_testSpanError__3GtuA\"};","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport S from './Message.module.css'\n\ntype MessageData = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\nexport function Message(props: MessageData) {\n    return (\n        <div className={S.message}>\n            <div className={S.img_box}>\n                <img className={S.avatar} src={props.avatar} alt=\"\"/>\n            </div>\n            <div className={S.message_box}>\n                <div className={S.name}>\n                    {props.name}\n                </div>\n                <div className={S.message_text}>\n                    {props.message}\n                </div>\n                <div className={S.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Message} from './Message';\n\nconst messageData = {\n    avatar: 'https://sun9-28.userapi.com/impg/WTEiF0fXf5n8_fC7r8a_W5O9sSAVeJb6_ySCmg/x17NR9qW4cE.jpg?size=1172x906&quality=96&sign=91c461912d04e5788685df3cd4b63139&type=album',\n    name: 'Дима',\n    message: 'Привет, как дела?',\n    time: '22:00',\n}\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className} `\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport S from \"./Affairs.module.css\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    name: string\n    priority: string\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id) // need to fix\n\n    const priority = {\n        color: props.priority === \"low\" ? \"green\" : (props.priority === \"middle\" ? \"yellow\" : \"red\")\n    };\n    return (\n        <div className={S.affair}>\n            <div className={S.name}>{props.name}</div>\n            <div style={priority} className={S.priority}>[{props.priority}]</div>\n            <SuperButton className={S.delete} onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport S from \"./Affairs.module.css\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n            name={a.name}\n            priority={a.priority}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div className={S.filter}>\n\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter( (a) => a.priority === filter) // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( (a) =>  a._id !== _id )\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void// need to fix any\n    addUser: () => void// need to fix any\n    error?: string // need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers, onEnter}) => {\n    const inputClass = s.error // need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n            <SuperInputText\n                value={name}\n                onChange={setNameCallback}\n                className={error ? inputClass : \"\"}\n                onKeyDown={onEnter}\n            />\n            <SuperButton onClick={addUser} disabled={name === \"\"}>add</SuperButton>\n            <span>{totalUsers}</span>\n            <div className={s.errorText}>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if(e.currentTarget.value === \" \" || \"\") {\n            let newError = \"add correct value\"\n            setError(newError)\n        } else {\n            setError(\"\")\n            setName(e.currentTarget.value) // need to fix\n        }\n    }\n    const addUser = () => {\n        if(name) {\n            addUserCallback(name)\n            alert('Hello ' + name + ' !') // need to fix\n            setName(\"\")\n        }\n    }\n    let totalUsers = users.length // need to fix\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === \"Enter\" && name) {\n            addUser()\n        }\n    }\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let user: UserType = {\n            _id: v1(),\n            name: name\n        };\n        let newUsers = [user, ...users];\n        setUsers(newUsers) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked, checked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(!e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.fake}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n\n                />\n\n                <SuperInputText\n                   // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n\n\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior+'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior />}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />}/>\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from 'react-router-dom'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1lWnG\",\"img_box\":\"Message_img_box__R_MCL\",\"avatar\":\"Message_avatar__1arMs\",\"message_box\":\"Message_message_box__2jwUj\",\"name\":\"Message_name__36fcc\",\"message_text\":\"Message_message_text__1rWI2\",\"time\":\"Message_time__3TJ8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"Affairs_delete__3mRdr\",\"affair\":\"Affairs_affair__GDPHP\",\"name\":\"Affairs_name__2tvji\",\"filter\":\"Affairs_filter__cHbIo\"};"],"sourceRoot":""}